% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/method.R
\docType{class}
\name{lcMethod-class}
\alias{lcMethod-class}
\alias{getLabel}
\alias{getLabel,lcMethod-method}
\alias{getName}
\alias{getName,lcMethod-method}
\alias{getShortName}
\alias{getShortName,lcMethod-method}
\alias{length,lcMethod-method}
\alias{names,lcMethod-method}
\title{lcMethod class}
\usage{
\S4method{getLabel}{lcMethod}(object, ...)

\S4method{getName}{lcMethod}(object)

\S4method{getShortName}{lcMethod}(object, ...)

\S4method{length}{lcMethod}(x)

\S4method{names}{lcMethod}(x)
}
\arguments{
\item{object}{The object to extract the label from.}

\item{...}{Additional arguments.}

\item{x}{The \code{lcMethod} object.}
}
\value{
The extracted label, as \code{character}.

A \verb{character vector} of argument names.
}
\description{
Base class used to define a longitudinal cluster method.

Extracts the assigned label.

Extracts the name of the given \code{object}.
}
\details{
Because the \code{lcMethod} arguments may be unevaluated, evaluation functions such as \code{[[} accept an \code{envir} argument.
A default \code{environment} can be assigned or obtained from a \code{lcMethod} object using the \code{environment()} function.
}
\section{Slots}{

\describe{
\item{\code{arguments}}{A \code{list} representing the arguments of the \code{lcMethod} object. Arguments are not evaluated upon creation of the method object. Instead, arguments are stored similar to a \code{call} object. Do not modify or access.}

\item{\code{sourceCalls}}{A list of calls for tracking the original call after substitution. Used for printing objects which require too many characters (e.g. ,function definitions, matrices).}
}}

\section{Fitting procedure}{

The fitting procedure for \code{lcMethod} objects is handled through a series of steps implemented by the \code{lcMethod} object.
The fitting procedure is handled by \code{\link[=latrend]{latrend()}}, in executed in the following order:
\enumerate{
\item \code{\link[=compose]{compose()}}: Evaluate and finalize the method argument values.
\item \code{\link[=validate]{validate()}}: Check the validity of the method argument values.
\item \code{\link[=prepareData]{prepareData()}}: Process the training data for fitting.
\item \code{\link[=preFit]{preFit()}}: Prepare environment for estimation, independent of training data.
\item \code{\link[=fit]{fit()}}: Estimate the specified method on the training data, outputting an object inheriting from \code{lcModel}.
\item \code{\link[=postFit]{postFit()}}: Post-process the outputted \code{lcModel} object.
}

The result of the fitting procedure is an \linkS4class{lcModel} object that inherits from the \code{lcModel} class.
}

\examples{
getName(lcMethodKML("Y")) # "longitudinal k-means"
getShortName(lcMethodKML("Y")) # "KML"
m = lcMethodKML("Y")
names(m)
}
\seealso{
\link{environment}

Other lcMethod implementations: 
\code{\link{lcMethodAkmedoids}},
\code{\link{lcMethodCrimCV}},
\code{\link{lcMethodCustom}},
\code{\link{lcMethodDtwclust}},
\code{\link{lcMethodFeature}},
\code{\link{lcMethodFunFEM}},
\code{\link{lcMethodGCKM}},
\code{\link{lcMethodKML}},
\code{\link{lcMethodLMKM}},
\code{\link{lcMethodLcmmGBTM}},
\code{\link{lcMethodLcmmGMM}},
\code{\link{lcMethodLongclust}},
\code{\link{lcMethodMclustLLPA}},
\code{\link{lcMethodMixAK_GLMM}},
\code{\link{lcMethodMixtoolsGMM}},
\code{\link{lcMethodMixtoolsNPRM}},
\code{\link{lcMethodRandom}},
\code{\link{lcMethodStratify}}

Other lcMethod functions: 
\code{\link{[[,lcMethod-method}},
\code{\link{as.data.frame.lcMethods}()},
\code{\link{as.data.frame.lcMethod}()},
\code{\link{as.lcMethods}()},
\code{\link{as.list.lcMethod}()},
\code{\link{evaluate.lcMethod}()},
\code{\link{formula.lcMethod}()},
\code{\link{update.lcMethod}()}
}
\concept{lcMethod functions}
\concept{lcMethod implementations}
