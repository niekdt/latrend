% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methodLcmmGMM.R, R/methodLcmmGBTM.R,
%   R/modelLcmmGMM.R
\name{getArgumentDefaults,lcMethodLcmmGMM-method}
\alias{getArgumentDefaults,lcMethodLcmmGMM-method}
\alias{getArgumentExclusions,lcMethodLcmmGMM-method}
\alias{getName,lcMethodLcmmGMM-method}
\alias{getShortName,lcMethodLcmmGMM-method}
\alias{validate,lcMethodLcmmGMM-method}
\alias{preFit,lcMethodLcmmGMM-method}
\alias{fit,lcMethodLcmmGMM-method}
\alias{responseVariable,lcMethodLcmmGMM-method}
\alias{interface-lcmm}
\alias{getArgumentDefaults,lcMethodLcmmGBTM-method}
\alias{getArgumentExclusions,lcMethodLcmmGBTM-method}
\alias{getName,lcMethodLcmmGBTM-method}
\alias{getShortName,lcMethodLcmmGBTM-method}
\alias{preFit,lcMethodLcmmGBTM-method}
\alias{fit,lcMethodLcmmGBTM-method}
\alias{responseVariable,lcMethodLcmmGBTM-method}
\alias{fitted.lcModelLcmmGMM}
\alias{predictForCluster,lcModelLcmmGMM-method}
\alias{model.matrix.lcModelLcmmGMM}
\alias{logLik.lcModelLcmmGMM}
\alias{sigma.lcModelLcmmGMM}
\alias{postprob,lcModelLcmmGMM-method}
\alias{converged,lcModelLcmmGMM-method}
\title{lcmm interface}
\usage{
\S4method{getArgumentDefaults}{lcMethodLcmmGMM}(object)

\S4method{getArgumentExclusions}{lcMethodLcmmGMM}(object)

\S4method{getName}{lcMethodLcmmGMM}(object)

\S4method{getShortName}{lcMethodLcmmGMM}(object)

\S4method{validate}{lcMethodLcmmGMM}(method, data, envir = NULL, ...)

\S4method{preFit}{lcMethodLcmmGMM}(method, data, envir, verbose, ...)

\S4method{fit}{lcMethodLcmmGMM}(method, data, envir, verbose, ...)

\S4method{responseVariable}{lcMethodLcmmGMM}(object, ...)

\S4method{getArgumentDefaults}{lcMethodLcmmGBTM}(object)

\S4method{getArgumentExclusions}{lcMethodLcmmGBTM}(object)

\S4method{getName}{lcMethodLcmmGBTM}(object)

\S4method{getShortName}{lcMethodLcmmGBTM}(object)

\S4method{preFit}{lcMethodLcmmGBTM}(method, data, envir, verbose, ...)

\S4method{fit}{lcMethodLcmmGBTM}(method, data, envir, verbose, ...)

\S4method{responseVariable}{lcMethodLcmmGBTM}(object, ...)

\method{fitted}{lcModelLcmmGMM}(object, ..., clusters = trajectoryAssignments(object))

\S4method{predictForCluster}{lcModelLcmmGMM}(object, newdata, cluster, what = "mu", ...)

\method{model.matrix}{lcModelLcmmGMM}(object, ..., what = "mu")

\method{logLik}{lcModelLcmmGMM}(object, ...)

\method{sigma}{lcModelLcmmGMM}(object, ...)

\S4method{postprob}{lcModelLcmmGMM}(object, ...)

\S4method{converged}{lcModelLcmmGMM}(object, ...)
}
\arguments{
\item{object}{The \code{lcMethod} or \code{lcModel} object.}

\item{method}{An object inheriting from \code{lcMethod} with all its arguments having been evaluated and finalized.}

\item{data}{A \code{data.frame} representing the transformed training data.}

\item{envir}{The \code{environment} containing variables generated by \code{\link[=prepareData]{prepareData()}} and \code{\link[=preFit]{preFit()}}.}

\item{...}{Additional arguments.}

\item{verbose}{A \link[R.utils:Verbose]{R.utils::Verbose} object indicating the level of verbosity.}

\item{clusters}{Optional cluster assignments per id. If unspecified, a \code{matrix} is returned containing the cluster-specific predictions per column.}

\item{newdata}{Optional \code{data.frame} for which to compute the model predictions. If omitted, the model training data is used.
Cluster trajectory predictions are made when ids are not specified.}

\item{cluster}{The cluster name (as \code{character}) to predict for.}

\item{what}{The distributional parameter to predict. By default, the mean response 'mu' is predicted. The cluster membership predictions can be obtained by specifying \code{what = 'mb'}.}
}
\description{
lcmm interface
}
\seealso{
\link{lcMethodLcmmGBTM} \link{lcMethodLcmmGMM} \link[lcmm]{lcmm-package}
}
\keyword{internal}
